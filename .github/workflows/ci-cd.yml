name: Build and Deploy Spring Boot Application

on:
  push:
    branches:
      - main  # Trigger the workflow when pushing to the main branch
  pull_request:
    branches:
      - main  # Trigger the workflow when a PR is created for the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner for the build process

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up JDK 21 for the build
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'  # Set Java version to 21
          distribution: 'temurin'  # Use the Temurin distribution of Java

      # Cache Maven dependencies to speed up builds on subsequent runs
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository  # Cache Maven repository directory
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}  # Use pom.xml hash to cache dependencies
          restore-keys: |
            ${{ runner.os }}-maven-  # Restore previous cache if the exact match is not found

      # Build the project using Maven
      - name: Build with Maven
        run: ./mvnw clean install -DskipTests  # Use Maven wrapper to clean, build, and skip tests

      # Install Render CLI to deploy the app
      - name: Install Render CLI
        run: |
          # Download the Render CLI binary for Linux with the -L flag to follow redirects
          curl -LO https://github.com/renderinc/render-cli/releases/download/v0.0.5/render-cli-linux-amd64

          # Check if the file is a valid binary
          if file render-cli-linux-amd64 | grep -q 'ASCII text'; then
            echo "Downloaded file is not a valid binary. It might be an error page or redirect."  
            exit 1
          fi

          # Make the Render CLI binary executable
          chmod +x render-cli-linux-amd64

          # Move the binary to the appropriate location for execution
          sudo mv render-cli-linux-amd64 /usr/local/bin/render

          # Verify the Render CLI installation by checking its version
          render --version

      # Deploy the application to Render
      - name: Deploy to Render
        run: |
          # Login to Render using the API key stored in the environment variable
          echo "$RENDER_API_KEY" | render login --apiKey
          
          # Deploy the application to the specified Render service (e.g., "budget-tracker-backend")
          render deploy --service budget-tracker-backend
